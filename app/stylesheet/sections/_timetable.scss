// Configuration based on timetable.md
// Length of a standard lesson hour in minutes.
$hour-base-duration: 45;
// Unique durations of lesson hours.
$hour-durations: 45, 90;
// Unique breaks in minutes.
$break-types: 15, 30;

$hour-base-height: 4.75em;

.day-info {
  text-align: center;
  margin-bottom: 1em;
}

.timetable {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  margin: 0 auto;
  padding: 0 1em;
  max-width: 75em;


  &.show-all-days .day {
    display: block;
  }
}

.day {
  width: 100%;
  display: none;

  h3 {
    margin-bottom: 0;
    text-align: center;
  }

  @include bp(break-timetable) {
    width: calc(20% - 4px);
    display: block;
  }
}

.active-day {
  display: block;

  h3 {
    color: $primary-color;
  }
}

.button-show-all-days {
  width: 100%;
  margin-top: 1em;

  @include bp(break-timetable) {
    display: none;
  }
}

.hours {
  position: relative;

  &.no-lessons {
    display: none;
  }

  @include bp(break-timetable) {
    &.no-lessons {
      display: block;
    }
  }
}

.hour {
  border-bottom: 1px solid $secondary-color;
  color: #fff;
  position: relative;
  // Hour is a container for the lessons
  display: flex;
  flex-flow: row wrap;

  @each $duration in $hour-durations {
    &.hour-duration-#{$duration} {
      height: ($duration / $hour-base-duration) * $hour-base-height;
    }
  }

  &:last-child {
    border-bottom: 0;
  }

  .hour-number {
    position: absolute;
    top: 1em;
    right: 1em;
    color: $secondary-color;
  }

  .multiple-hours-icon {
    display: block;
    position: absolute;
    bottom: 1em;
    right: 1em;
    z-index: 11;
  }

  a {
    color: $timetable-link;

    &:hover {
      color: lighten($secondary-color, 10%);
    }
  }

  // Calculate the margin-bottom that an hour must have to fake a break.
  @each $break-minutes in $break-types {
    &.break-#{$break-minutes} {
      margin-bottom: ($break-minutes / $hour-base-duration) * $hour-base-height;
    }
  }
}

.lesson {
  width: 100%;
  height: 100%;
  padding: 0 1em;
  line-height: 1.3;

  .lesson-text {
    position: relative;
    z-index: $z-tt-lesson-text;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .lesson-description {
    float: left;
    font-size: 13px;
    width: 100%;
  }
  .lesson-room-class {
    float: left;
  }
}

.hidden-lessons {
  background: $multiple-lessons-bg;
  width: auto;
  position: absolute;
  z-index: 1000;
  padding: 1em;
  opacity: 1;
  display: block;
  right: 1em;

  @include bp(break-timetable) {
    right: -10px;
    margin-top: -10px;

    &.ng-hide-add,
    &.ng-hide-remove {
      transition: 0s ease all;
    }

    &.ng-hide-add-active,
    &.ng-hide-remove-active {
      transition-duration: 300ms;
    }

    &.ng-hide-add-active {
      transition-delay: 400ms;
    }
  }


  &.ng-hide {
    opacity: 0;
  }

  // Arrow
  &:after {
    bottom: 100%;
    right: 9%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-color: transparent;
    border-bottom-color: $multiple-lessons-bg;
    border-width: 10px;
    margin-left: -10px;
  }
}


.line {
  width: 100%;
  height: 1px;
  background: $time-line-bg;
  position: absolute;
  top: 0;
  z-index: $z-tt-line;
}
